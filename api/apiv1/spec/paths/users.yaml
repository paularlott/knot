post:
  tags:
    - Users
  summary: Create User
  description: |
    Create a new user.

    Only admin users can create users.
  operaionId: createUser
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            email:
              type: string
              example: user1@example.com
              description: The email address of the user
            username:
              type: string
              example: "user1"
              description: The username of the user
            password:
              type: string
              example: "password"
              description: The password of the user
            active:
              type: boolean
              description: Whether the user is active
            ssh_public_key:
              type: string
              description: The SSH key for the user
            preferred_shell:
              type: string
              description: The preferred shell of the user
            roles:
              type: array
              items:
                type: string
                example: ["00000000-0000-0000-0000-000000000000"]
              description: The IDs of the roles assigned to the user.
            groups:
              type: array
              items:
                type: string
                example: ["00000000-0000-0000-0000-000000000000"]
              description: The IDs of the groups assigned to the user.
          required:
            - username
            - password
            - email
            - roles
  responses:
    '201':
      description: User created successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: boolean
                description: True if the user was created
              user_id:
                type: string
                format: uuid
                description: The ID of the user
    '400':
      $ref: "../responses/bad-request.yaml"

    '403':
      $ref: "../responses/forbidden.yaml"

  security:
    - BearerAuth: []

get:
  tags:
    - Users
  summary: Get the Users
  description: Get the list of users within the system.
  operaionId: listUsers
  parameters:
  - name: state
    in: query
    description: The sate of users to return
    required: false
    schema:
      type: string
      enum:
        - active
        - inactive
        - all
      default: all
  responses:
    '200':
      description: A list of users
      content:
        application/json:
          schema:
            type: array
            items:
                  $ref: '#/components/schemas/User'

    '400':
      $ref: "../responses/bad-request.yaml"

    '403':
      $ref: "../responses/forbidden.yaml"

  security:
    - BearerAuth: []

components:
  schemas:
    User:
      type: object
      properties:
        user_id:
          type: string
          description: The ID of the user
        username:
          type: string
          description: The username of the user
        email:
          type: string
          description: The email of the user
        roles:
          type: array
          items:
            type: string
          description: The roles of the user
        groups:
          type: array
          items:
            type: string
          description: The groups of the user
        active:
          type: boolean
          description: Whether the user is active
        current:
          type: boolean
          description: Whether the user is the current user
        last_login_at:
          type: string
          format: date-time
          description: The last login date and time of the user (UTC)
        number_spaces:
          type: integer
          description: The number of spaces the user has
        number_spaces_deployed:
          type: integer
          description: The number of spaces the user has deployed currently
