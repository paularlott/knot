label {
  em {
    color: @inputRequiredColor;
    font-style: normal;
  }
}

.error-message {
  padding: .25rem .75rem;
  text-align: right;
  .fontSizeClamp(.75, .9);
}

.description {
  .fontSizeClamp(.75, .9);
}

// Limit resize in firefox, options are none, vertical, horizontal or both
textarea {
	resize: vertical;
}

input[type="text"],
input[type="number"],
input[type="email"],
input[type="tel"],
input[type="url"],
input[type="password"],
input[type="search"],
textarea, select {
  .standardFont;
  .user-select();
  border: 1px solid @darkBorderColor;
  color: @darkInputColor;
  background-color: @darkInputBackgroundColor;
  border-radius: .5rem;
  padding: .75rem;
  width: 100%;

  &:focus {
    outline: none;
    border-color: @inputFocusColor;
  }

  &.error {
    border-color: @inputErrorColor;
  }
}

body.light {
  input[type="text"],
	input[type="number"],
	input[type="email"],
	input[type="tel"],
	input[type="url"],
	input[type="password"],
	input[type="search"],
  textarea, select {
    border-color: @lightBorderColor;
    color: @lightInputColor;
    background-color: @lightInputBackgroundColor;

    &:focus {
      outline: none;
      border-color: @inputFocusColor;
    }

    &.error {
      border-color: @inputErrorColor;
    }
  }
}

input[type="submit"], button, .button {
  .standardFont;
  .user-select();
  color: @buttonColor;
  background-color: @buttonBackgroundColor;
  border: none;
  border-radius: .5rem;
  padding: .5rem 1.5rem;
  cursor: pointer;
  text-decoration: none;
  white-space: nowrap;
  text-align: center;

  &:hover {
    background-color: darken(@buttonBackgroundColor, 10%);
  }

  &.danger {
    background-color: @buttonDangerBackgroundColor;
    &:hover {
      background-color: darken(@buttonDangerBackgroundColor, 10%);
    }
  }

  &.full-width {
    width: 100%;
  }
}

button, .button {
  .standardFont;
  .bx {
    position: relative;
    top: .125rem;
  }

  &.outline {
    color: @darkFontColor;
    background-color: transparent;
    border: 1px solid @darkBorderColor;

    &:hover {
      background-color: @darkBorderColor;
    }
  }
}

a.button {
  display: inline-block;
}

body.light {
  button, .button {
    color: @buttonColor;

    &.outline {
      color: @lightFontColor;
      background-color: transparent;
      border: 1px solid @lightBorderColor;

      &:hover {
        background-color: @lightBorderColor;
      }
    }
  }

  header {
    .button.outline {
      color: @darkFontColor;
      border: 1px solid @darkBorderColor;
      &:hover {
        background-color: @darkBorderColor;
      }
    }
  }
}

td input[type="submit"], td button {
  .standardFont;
  .fontSizeClamp(.85, .95);
  width: auto;
  padding: .5rem .75rem;
}

label.checkbox {
  display: block;
  margin-bottom: .25rem;
}

input[type="checkbox"] {
  background: @checkboxBackgroundColor;
  appearance: none;
  top: .4rem;
  width: 3rem;
  height: 1.5rem;
  border-radius: 3rem;
  position: relative;
  cursor: pointer;
  outline: none;
  transition: all .2s ease-in-out;

  &:disabled {
    opacity: .5;
  }

  &:checked {
    background: @buttonBackgroundColor;
  }

  &:after {
    .bx();
    content: "";
    position: absolute;
    width: 1.5rem;
    height: 1.5rem;
    font-size: 1.5rem;
    border-radius: 50%;
    background: #fff;
    box-shadow: 0 0 .25rem rgba(0,0,0,.3);
    transform: scale(.7);
    top: 0;
    left: 0;
    transition: all .2s ease-in-out;
    text-align: center;
  }

  &:checked:after{
    left: ~"calc(100% - 1.5rem)";
  }

  &.light-dark {
    &:after {
      content: "\eebe";
      color: @darkInputColor;
    }
    &:checked:after{
      content: "\ee4e";
      color: @darkInputColor;
    }
  }
}

.selectControl {
  position: relative;
  z-index: 1;
	cursor: pointer;
  background-color: @darkInputBackgroundColor;
  border-radius: .5rem;

  select {
    cursor: pointer;
    z-index: 4;
    position: relative;
    color: @darkInputColor;
    background-color: transparent;
    outline: none;
    -webkit-appearance: none;
    -moz-appearance: none;

    &:-moz-focusring {
      color: transparent;
      text-shadow: 0 0 0 #000;
    }

    &::-ms-expand {
      display: none;
    }
  }

  &:after {
    content: " ";
    display: block;
    z-index: 2;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: .5rem .5rem 0 .5rem;
    border-color: @buttonBackgroundColor transparent transparent transparent;
    position: absolute;
    top: 50%;
    right: 1rem;
    transform: translateY(-50%);
  }
}

body.light {
  .selectControl {
    background-color: @lightInputBackgroundColor;

    select {
      color: @lightInputColor;
      background-color: transparent;
    }
  }
}

::placeholder { /* Firefox */
  color: fade(@darkInputColor, 35%);
  opacity: 1;
}

::-ms-input-placeholder { /* Edge 12 -18 */
  color: fade(@darkInputColor, 35%);
}

body.light {
  ::placeholder { /* Firefox */
    color: fade(@lightInputColor, 35%);
    opacity: 1;
  }

  ::-ms-input-placeholder { /* Edge 12 -18 */
    color: fade(@lightInputColor, 35%);
  }
}

form {
  dl {
    display: flex;
    flex-direction: column;
    height: 100%;

    dt {
      .sizeClamp(margin-bottom, .5, .75);
      flex-grow: 0;
      flex-shrink: 0;
    }
    dd {
      .sizeClamp(margin-bottom, 1, 1.25);
      flex-grow: 0;
      flex-shrink: 0;

      &.grow {
        flex-grow: 1;
      }

      ul {
        list-style: none;
        margin-left: 0;

        li {
          .sizeClamp(margin-bottom, 1, 1.25);
        }
      }
    }
  }
}

.tcp-port {
  .standardFont;
  .user-select();
  color: @buttonColor;
  background-color: transparent;
  border: none;
  border-radius: .5rem;
  padding: .5rem 1.5rem;
  text-decoration: none;
  white-space: nowrap;
  text-align: center;
  color: @darkFontColor;
  background-color: transparent;
  border: 1px solid @lightBorderColor;
}

body.light {
  .tcp-port {
    color: @lightFontColor;
    border-color: @darkBorderColor;
  }
}
