<!DOCTYPE html>
<html lang="en">
<head>
	<title>Terminal</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover, interactive-widget=resizes-content">
  <script>if(localStorage.getItem('_x_darkMode') !== 'false') { document.documentElement.classList.add('dark') }</script>
	<link rel="stylesheet" href="/assets/css/knot.css?_v={{ .version }}" />
	<script>
		window.terminalApp = function() {
			return {
				showKeyboard: false,
				modifiers: { ctrl: false, alt: false },
				terminal: null,

				init() {
					this.terminal = initializeTerminal({
						shell: "{{ .shell }}",
						renderer: "{{ .renderer }}",
						spaceId: "{{ .spaceId }}",
						logView: {{ .logView }},
					});

					document.addEventListener('keydown', (e) => {
						if (this.modifiers.ctrl || this.modifiers.alt) {
							e.preventDefault();
							this.sendKey(e.key);
						}
					});
				},

				toggleModifier(mod) {
					this.modifiers[mod] = !this.modifiers[mod];
				},

				sendKey(key) {
					if (!this.terminal) return;

					let input = key;

					if (this.modifiers.ctrl) {
						if (key.length === 1) {
							const code = key.toLowerCase().charCodeAt(0) - 96;
							input = String.fromCharCode(code);
						}
						this.modifiers.ctrl = false;
					}

					if (this.modifiers.alt) {
						input = '\x1b' + key;
						this.modifiers.alt = false;
					}

					this.terminal.input(input);
					this.terminal.focus();
				},

        setKeyboardState(shown) {
          this.showKeyboard = shown;
          window.setTimeout(() => { window.dispatchEvent(new Event('resize')); }, 100);
        }
			}
		}
	</script>
</head>
<body x-data="terminalApp()">
  <div id="terminal-wrap">
    <div id="terminal" :class="{ 'terminal-with-keyboard': showKeyboard }"></div>
    {{ if not .logView }}
    <div class="absolute bottom-0 left-0 right-0 z-50 bg-white/30">
      <div x-show="!showKeyboard" @click="setKeyboardState(true)" class="w-full h-[20px] bg-black/70 border-t border-white/20 flex items-center justify-center cursor-pointer text-white hover:bg-black/80">
        <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
          <path d="M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z"/>
        </svg>
      </div>
      <div x-show="showKeyboard" class="bg-black/90 border-t border-white/20 p-2 backdrop-blur">
        <div class="flex gap-1 justify-center items-center">
          <button @click="toggleModifier('ctrl')" class="border px-3 py-2 rounded text-xs min-w-10 text-center select-none transition-all" :class="{ 'bg-blue-600 border-blue-600 text-white hover:bg-blue-700': modifiers.ctrl, 'bg-white/10 border-white/20 text-white hover:bg-white/20': !modifiers.ctrl }">Ctrl</button>
          <button @click="toggleModifier('alt')" class="border px-3 py-2 rounded text-xs min-w-10 text-center select-none transition-all" :class="{ 'bg-blue-600 border-blue-600 text-white hover:bg-blue-700': modifiers.alt, 'bg-white/10 border-white/20 text-white hover:bg-white/20': !modifiers.alt }">Alt</button>
          <button @click="sendKey('\x1b')" class="bg-white/10 border border-white/20 text-white px-3 py-2 rounded text-xs min-w-10 text-center select-none transition-all hover:bg-white/20">Esc</button>
          <button @click="sendKey('\t')" class="bg-white/10 border border-white/20 text-white px-3 py-2 rounded text-xs min-w-10 text-center select-none transition-all hover:bg-white/20">Tab</button>
          <button @click="sendKey('\x1b[A')" class="bg-white/10 border border-white/20 text-white px-3 py-2 rounded text-sm font-bold min-w-10 text-center select-none transition-all hover:bg-white/20">↑</button>
          <button @click="sendKey('\x1b[B')" class="bg-white/10 border border-white/20 text-white px-3 py-2 rounded text-sm font-bold min-w-10 text-center select-none transition-all hover:bg-white/20">↓</button>
          <button @click="sendKey('\x1b[D')" class="bg-white/10 border border-white/20 text-white px-3 py-2 rounded text-sm font-bold min-w-10 text-center select-none transition-all hover:bg-white/20">←</button>
          <button @click="sendKey('\x1b[C')" class="bg-white/10 border border-white/20 text-white px-3 py-2 rounded text-sm font-bold min-w-10 text-center select-none transition-all hover:bg-white/20">→</button>
          <button @click="setKeyboardState(false)" class="bg-red-600 border-red-600 text-white px-3 py-2 rounded text-base font-bold min-w-10 text-center select-none transition-all hover:bg-red-700">×</button>
        </div>
      </div>
    </div>
    {{ end }}
  </div>
	<script src="/assets/js/knot.js?_v={{ .version }}" ></script>
</body>
</html>