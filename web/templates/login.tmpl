<!DOCTYPE html>
<html>
  <head>
    {{ template "head-meta" (map "PageTitle" "Login") }}
  </head>
  <body {{ template "init-theme" . }}>

    <div class="box-wrapper">

      <div class="box login-box">
        <div class="row align-items-center">
          <div class="col-sm-6">
            <div style="text-align: center; padding: 2rem 0">
              <img src="images/knot-logo.webp" alt="Knot Logo" class="logo" />
              <h1>Knot</h1>
              <p class="version">Version: {{ .version }}</p>
            </div>
          </div>
          <div class="col-sm-6">

            <div x-data="loginUserForm()">
              <form action="" method="POST" @submit.prevent="submitData">
                <dl>
                  <dt><label for="email">Email <em>*</em></label></dt>
                  <dd>
                    <input type="text" name="email" x-on:keyup.debounce.500ms="checkEmail()" :class="{'error': !emailValid}" placeholder="Email address" x-model="formData.email">
                    <div x-show="!emailValid" class="error-message">Enter a valid email address.</div>
                  </dd>
                  <dt><label for="password">Password <em>*</em></label></dt>
                  <dd>
                    <input type="password" name="password" x-on:keyup.debounce.500ms="checkPassword()" :class="{'error': !passwordValid}" placeholder="Password" x-model="formData.password">
                    <div x-show="!passwordValid" class="error-message">Enter your password.</div>
                  </dd>
                  <dt></dt>
                  <dd><input type="submit" :value="buttonLabel" x-text="buttonLabel" :disabled="loading" class="full-width"></dd>
                </dl>
              </form>
            </div>

          </div>
        </div>
      </div>
    </div>

<script>

function loginUserForm() {
  return {
    formData: {
      email: "",
      password: "",
    },
    loading: false,
    buttonLabel: 'Login',
    emailValid: true,
    passwordValid: true,
    checkEmail() {
      return this.emailValid = validate.email(this.formData.email);
    },
    checkPassword() {
      return this.passwordValid = this.formData.password.length > 0;
    },
    submitData() {
      var err = false;
      err = !this.checkEmail() || err;
      err = !this.checkPassword() || err;
      if(err) {
        return;
      }

      this.buttonLabel = 'Logging in...'
      this.loading = true;

      var data = {
        email: this.formData.email,
        password: this.formData.password,
      }

      fetch('/api/v1/auth/web', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        })
        .then((response) => {
          if (response.status === 200) {
            window.location.href = '{{ .redirect }}';
          } else {
            window.dispatchEvent(new CustomEvent('show-alert', { detail: { msg: "Invalid email or password", type: 'error' } }));
          }
        })
        .catch((error) => {
          window.dispatchEvent(new CustomEvent('show-alert', { detail: { msg: 'Ooops Error!<br />' + error.message, type: 'error' } }));
        })
        .finally(() => {
          this.buttonLabel = 'Login';
          this.loading = false;
        })
    },
  }
}

</script>

{{ template "alerts" . }}

  </body>
</html>
