{{ template "metaHead" (map "PageTitle" "Templates") }}
{{ template "beforeContent" . }}

<div class="content">
  <div class="row">
    <div class="col-sm-12">
      <div class="box">
        <h2>Templates</h2>

        <div class="text-right">
          <a href="/templates/create" class="button"><i class="bx bx-plus"></i> Create Template</a>
        </div>

<div x-data="templateListComponent()" x-init="getTemplates">
  <div class="responsiveTableWrapper">
    <div class="responsiveTableWrapperInner">
      {{ template "loading" . }}
      <table class="action" x-show="!loading" x-cloak>
        <thead>
        <tr>
          <th>Template ID</th>
          <th>Name</th>
          <th>Usage</th>
          <th>&nbsp;</th>
        </tr>
        </thead>
        <tbody>
        <template x-for="t in templates" :key="t.template_id">
          <tr>
            <td x-text="t.template_id" class="no-wrap"></td>
            <td x-text="t.name"></td>
            <td x-text="t.usage"></td>
            <td>
                <button @click="editTemplate(t.template_id)">Edit</button> <button x-show="t.usage === 0" @click="deleteTemplate(t.template_id)" class="danger">Delete</button>
            </td>
          </tr>
        </template>
        </tbody>
      </table>
    </div>
  </div>
</div>

      </div>
    </div>
  </div>
</div>

<script>
function templateListComponent() {
  return {
    loading: true,
    templates: [],
    async getTemplates() {
      this.loading = true;
      const response = await fetch('/api/v1/templates', {
        headers: {
          'Content-Type': 'application/json'
        }
      });
      this.templates = await response.json();
      this.loading = false;
    },
    editTemplate(templateId) {
      window.location.href = `/templates/edit/${templateId}`;
    },
    async deleteTemplate(templateId) {
      await fetch(`/api/v1/templates/${templateId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      }).then((response) => {
        if (response.status === 200) {
           window.dispatchEvent(new CustomEvent('show-alert', { detail: { msg: "Template deleted", type: 'success' } }));
        } else {
          window.dispatchEvent(new CustomEvent('show-alert', { detail: { msg: "Template could not be deleted", type: 'error' } }));
        }
      });
      this.getTemplates();
    },
  };
}
</script>

{{ template "afterContent" . }}
