{{ template "layout-base.tmpl" . }}

{{ define "pageTitle" }}
{{ if .isProfile }}
  My Profile
{{ else }}
  {{ if .isEdit }}Edit User{{ else }}Create User{{ end }}
{{ end }}
{{ end }}

{{ define "mainContent" }}
<main class="relative w-full h-full overflow-y-auto lg:ml-64 pb-8">
  <div class="grid grid-cols-1 px-4 pt-6 lg:grid-cols-4 gap-2 xl:gap-4" x-data="userForm({{ .isEdit }}, '{{ .user.id }}', {{ .isProfile }})" x-init="initUsers">

    <div class="mb-4 col-span-full xl:mb-2">
      <h1 class="text-xl font-semibold text-gray-900 sm:text-2xl dark:text-white">
        {{ if .isProfile }}Profile{{ else }}{{ if .isEdit }}Edit User{{ else }}Create User{{ end }}{{ end }}
      </h1>
    </div>

    <div class="p-4 mb-4 bg-white border border-gray-200 rounded-lg shadow-xs col-span-2 dark:border-gray-700 sm:p-6 dark:bg-gray-800">

      {{ template "loading" . }}
      <form class="space-y-6" action="" method="POST" @submit.prevent="submitData" x-show="!loading" x-cloak>
        <div>
          <label for="username" class="form-label">Username</label>
          <input type="text" class="form-field" name="username" x-on:keyup.debounce.500ms="checkUsername()" :class="{'form-field-error': !usernameValid}" placeholder="Username (a - Z, 0 - 9 and -)" x-model="formData.username" {{ if .isEdit }}readonly{{ end }}>
          <div x-show="!usernameValid" class="error-message" x-cloak>Username can only contain the letters a - Z, 0 - 9 and -, max 64 characters.</div>
        </div>
        <div>
          <label for="email" class="form-label">Email</label>
          <input type="email" class="form-field" name="email" x-on:keyup.debounce.500ms="checkEmail()" :class="{'form-field-error': !emailValid}" placeholder="Email address" x-model="formData.email">
          <div x-show="!emailValid" class="error-message" x-cloak>Enter a valid email address.</div>
        </div>
        <div>
          <label for="shell" class="form-label">Preferred Shell</label>
          <select id="shell" class="form-field" name="shell" x-model="formData.preferred_shell">
            <option value="bash">Bash</option>
            <option value="zsh">Zsh</option>
            <option value="fish">fish</option>
            <option value="sh">Bourne</option>
          </select>
          <p class="description">The shell that will be used when you open a web terminal in this space.</p>
          <div x-show="!shellValid" class="error-message" x-cloak>Select a valid shell.</div>
        </div>
        <div>
          <label for="tz" class="form-label">Timezone</label>
          <div x-data="autocompleter()" x-init="setData(window.Timezones)" data-parent-variable="timezone" @refresh-autocompleter.window="refresh()" class="relative">
            <input x-model="search" class="form-field" type="search" placeholder="Search..." @focus="showList = true" @blur.debounce.200ms="showList = false">
            <div x-show="showList && filteredOptions.length" x-cloak class="max-h-40 overflow-auto absolute z-50 my-1 text-base p-2 list-none bg-white divide-y divide-gray-100 rounded-lg shadow-xl border border-gray-200 dark:bg-gray-800 dark:border-gray-700 dark:divide-gray-600 block whitespace-nowrap">
              <ul class="list-none">
                <template x-for="(option, index) in filteredOptions" :key="index">
                  <li @click="selectOption(option)" x-text="option" class="my-1 cursor-pointer nav-item text-sm"></li>
                </template>
              </ul>
            </div>
          </div>
          <div x-show="!tzValid" class="error-message">Enter a valid Timezone.</div>
        </div>
        <div>
          <label for="github_username" class="form-label">GitHub Username</label>
          <input type="text" class="form-field" name="github_username" x-on:keyup.debounce.500ms="checkGithubUsername()" :class="{'form-field-error': !githubUsernameValid}" placeholder="GitHub Username" x-model="formData.github_username">
          <p class="description">If the GitHub username is given then the public SSH keys are loaded from it by the agent.</p>
          <div x-show="!githubUsernameValid" class="error-message" x-cloak>Enter a valid GitHub username.</div>
        </div>
        <div>
          <label for="ssh_key" class="form-label">SSH Public Key</label>
          <textarea class="form-field" name="ssh_key" rows="8" placeholder="SSH Public Key" x-model="formData.ssh_public_key"></textarea>
          <p class="description">If given this key will be added to the spaces to allow you to SSH into the space.</p>
        </div>
        <div>
          <label for="password" class="form-label">Password</label>
          <input type="password" class="form-field" name="password" x-on:keyup.debounce.500ms="checkPassword()" :class="{'form-field-error': !passwordValid}" placeholder="Password" x-model="formData.password">
          {{ if .isProfile }}
          <p class="description">Leave blank to keep the current password.</p>
          {{ end }}
          <div x-show="!passwordValid" class="error-message" x-cloak>Password must be at least 8 characters.</div>
        </div>
        <div>
          <label for="confirm_password" class="form-label">Confirm Password</label>
          <input type="password" class="form-field" name="confirm_password" x-on:keyup.debounce.500ms="checkConfirmPassword()" :class="{'form-field-error': !confirmPasswordValid}" placeholder="Confirm password" x-model="formData.password_confirm">
          <div x-show="!confirmPasswordValid" class="error-message" x-cloak>Both passwords must match.</div>
        </div>
        {{ if .isProfile }}
        <div>
          <label for="service_password" class="form-label">Service Password</label>
          <input type="text" class="form-field" name="service_password" x-on:keyup.debounce.500ms="checkServicePassword()" :class="{'form-field-error': !servicePasswordValid}" placeholder="Service Password" x-model="formData.service_password">
          <p class="description">A password made available for initializing services such as databases.</p>
          <div x-show="!servicePasswordValid" class="error-message" x-cloak>The service password is required.</div>
        </div>
        {{ end }}
        {{ if and (not .isProfile) (and .isEdit .permissionManageUsers) (ne .user_id .user.id) }}
        <div>
          <label class="inline-flex items-center mb-5 cursor-pointer">
            <input type="checkbox" id="active" name="active" x-model="formData.active" class="sr-only peer">
            <div class="relative w-9 h-5 bg-gray-200 peer-focus:outline-hidden peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:rtl:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600 peer-checked:dark:bg-blue-600"></div>
            <span class="ms-3 text-sm font-medium text-gray-900 dark:text-gray-300">Active</span>
          </label>
        </div>
        {{ end }}
        {{ if and (not .isProfile) .permissionManageUsers }}
        <div>
          <label class="form-label">Maximum Spaces</label>
          <input type="number" class="form-field" name="max_spaces" x-model="formData.max_spaces" min="0" max="10000" x-on:keyup.debounce.500ms="checkMaxSpaces()" :class="{'form-field-error': !maxSpacesValid}" >
          <p class="description">The maximum number of spaces this user can create, 0 for unlimited.</p>
          <div x-show="!maxSpacesValid" class="error-message" x-cloak>Enter a valid number between 0 and 10,000.</div>
        </div>
        <div>
          <label class="form-label">Compute Units Limit</label>
          <input type="number" class="form-field" name="compute_units" x-model="formData.compute_units" min="0" x-on:keyup.debounce.500ms="checkComputeUnits()" :class="{'form-field-error': !computeUnitsValid}" >
          <p class="description">The maximum number of compute units (CPU, GPU, RAM, etc.) this user can use, 0 for unlimited.</p>
          <div x-show="!computeUnitsValid" class="error-message" x-cloak>Enter a valid number >= 0.</div>
        </div>
        <div>
          <label class="form-label">Storage Units Limit</label>
          <input type="number" class="form-field" name="storage_units" x-model="formData.storage_units" min="0" x-on:keyup.debounce.500ms="checkStorageUnits()" :class="{'form-field-error': !storageUnitsValid}" >
          <p class="description">The maximum number of storage units this user can use, 0 for unlimited.</p>
          <div x-show="!storageUnitsValid" class="error-message" x-cloak>Enter a valid number >= 0.</div>
        </div>
        <div>
          <label class="form-label">Maximum Tunnels</label>
          <input type="number" class="form-field" name="max_tunnels" x-model="formData.max_tunnels" min="0" x-on:keyup.debounce.500ms="checkMaxTunnels()" :class="{'form-field-error': !maxTunnelsValid}" >
          <p class="description">The maximum number of tunnels this user can create, 0 for unlimited.</p>
          <div x-show="!maxTunnelsValid" class="error-message" x-cloak>Enter a valid number between 0 and 100.</div>
        </div>

        <div class="grid grid-cols-1 xl:grid-cols-2 xl:gap-4">
          <div class="col-span-1" x-show="roles.length" x-cloak>
            <label class="form-label">Roles</label>
            <template x-for="(role, index) in roles" :key="index">
              <label class="flex items-center cursor-pointer mb-2">
                <input type="checkbox" class="sr-only peer" :id="'role-' + index" name="roles[]" :value="role.role_id" :checked="formData.roles.includes(role.role_id)" @change="toggleRole(role.role_id)">
                <div class="relative w-9 h-5 bg-gray-200 peer-focus:outline-hidden peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:rtl:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600 peer-checked:dark:bg-blue-600"></div>
                <span class="ms-3 text-sm font-medium text-gray-900 dark:text-gray-300" x-text="role.name"></span>
              </label>
            </template>
          </div>
          <div class="col-span-1" x-show="groups.length" x-cloak>
            <label class="form-label">Groups</label>
            <template x-for="(group, index) in groups" :key="index">
              <label class="flex items-center cursor-pointer mb-2">
                <input type="checkbox" class="sr-only peer" :id="'group-' + index" name="groups[]" :value="group.group_id" :checked="formData.groups.includes(group.group_id)" @change="toggleGroup(group.group_id)">
                <div class="relative w-9 h-5 bg-gray-200 peer-focus:outline-hidden peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:rtl:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600 peer-checked:dark:bg-blue-600"></div>
                <span class="ms-3 text-sm font-medium text-gray-900 dark:text-gray-300" x-text="group.name"></span>
              </label>
            </template>
          </div>
        </div>
        {{ end }}

        <div x-show="isEdit" x-cloak>
          <label class="form-label">Last Login At</label>
          <input type="text" class="form-field" name="last_login_at" x-model="last_login_at" readonly disabled>
        </div>

        <div class="sm:flex justify-between">
          <div class="flex">
            <button type="submit" class="btn-primary mr-2" :value="buttonLabel" x-text="buttonLabel" x-on:click="stayOnPage=true"></button>
            <button type="submit" class="btn-primary" value="Save" x-show="isEdit" x-on:click="stayOnPage=false">Save</button>
          </div>

          {{ if and .isProfile .totpEnabled }}
          <button type="button" class="btn-primary mt-2 sm:mt-0" value="TOTP" x-show="isEdit && formData.totp_secret.length" x-on:click="showTOTP = true">Show TOTP</button>
          {{ end }}

          {{ if not (and .isProfile .totpEnabled) }}
          <button @click="resetConfirmShow = true;" type="button" x-show="isEdit && formData.totp_secret.length" class="cursor-pointer whitespace-nowrap rounded-lg bg-red-700 hover:bg-red-800 px-4 py-2 text-center text-sm font-medium tracking-wide text-neutral-100 transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black active:opacity-100 active:outline-offset-0 dark:text-white dark:bg-red-600 dark:hover:bg-red-700 dark:focus-visible:outline-white">Reset TOTP</button>
          {{ end }}
        </div>

      </form>

    </div>

    {{ if .isEdit }}
    <div class="p-4 mb-4 col-span-2 hidden lg:block" x-data="usageComponent('{{ .user.id }}')">
      <div class="h-72">
        <canvas id="spaceUsage"></canvas>
      </div>
      <div class="h-72">
        <canvas id="tunnelUsage"></canvas>
      </div>
      <div class="h-72">
        <canvas id="computeUsage"></canvas>
      </div>
      <div class="h-72">
        <canvas id="storageUsage"></canvas>
      </div>
    </div>
    {{ end }}

    <!-- Modal -->
    <div x-cloak x-show="showTOTP" x-transition.opacity.duration.200ms x-trap.inert.noscroll="showTOTP" @keydown.esc.window="showTOTP = false" @click.self="dshowTOTP = false" class="fixed top-0 left-0 right-0 bottom-0 inset-0 z-30 flex items-end justify-center bg-black/20 p-4 pb-8 backdrop-blur-xs sm:items-center lg:p-8" role="dialog" aria-modal="true" aria-labelledby="defaultModalTitle">
      <!-- Modal Dialog -->
      <div x-show="showTOTP" x-transition:enter="transition ease-out duration-200 delay-100 motion-reduce:transition-opacity" x-transition:enter-start="scale-0" x-transition:enter-end="scale-100" class="flex max-w-lg flex-col gap-4 overflow-hidden rounded-lg border border-grey-200 bg-white text-neutral-600 dark:bg-gray-800 dark:border-gray-700 dark:text-neutral-300 shadow-xl">
        <!-- Dialog Header -->
        <div class="flex items-center justify-between border-b border-neutral-300 bg-neutral-50/60 p-4 dark:border-gray-700 dark:bg-gray-800/20">
          <div class="flex items-center justify-center rounded-full bg-blue-500/20 text-blue-500 p-1">
            <svg class="size-6" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24">
              <path fill-rule="evenodd" d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm9.408-5.5a1 1 0 1 0 0 2h.01a1 1 0 1 0 0-2h-.01ZM10 10a1 1 0 1 0 0 2h1v3h-1a1 1 0 1 0 0 2h4a1 1 0 1 0 0-2h-1v-4a1 1 0 0 0-1-1h-2Z" clip-rule="evenodd"/>
            </svg>
          </div>
          <h3 class="font-semibold tracking-wide text-neutral-900 dark:text-white ml-4 mr-4">One Time Password</h3>
          <button @click="showTOTP = false" aria-label="close modal" class="cursor-pointer">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" stroke="currentColor" fill="none" stroke-width="1.4" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
            </svg>
          </button>
        </div>
        <!-- Dialog Body -->
        <div class="px-4 py-4 text-center">
          <p><strong x-text="formData.totp_secret"></strong></p>
          <template x-if="formData.totp_secret.length > 0">
            <img :src="'/qrcode/' + formData.totp_secret" alt="QR Code" class="w-48 h-48 mx-auto mt-4">
          </template>
        </div>
        <!-- Dialog Footer -->
        <div class="flex flex-col-reverse justify-between gap-2 border-t border-neutral-300 bg-neutral-50/60 p-4 dark:border-gray-700 dark:bg-gray-800/20 sm:flex-row sm:items-center md:justify-end">
            <button @click="showTOTP = false" type="button" class="cursor-pointer whitespace-nowrap rounded-lg bg-blue-700 hover:bg-blue-800 px-4 py-2 text-center text-sm font-medium tracking-wide text-neutral-100 transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black active:opacity-100 active:outline-offset-0 dark:text-white dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus-visible:outline-white">Ok</button>
        </div>
      </div>
    </div>

    <div x-cloak x-show="resetConfirmShow" x-transition.opacity.duration.200ms x-trap.inert.noscroll="resetConfirmShow" @keydown.esc.window="resetConfirmShow = false" @click.self="resetConfirmShow = false" class="fixed top-0 left-0 right-0 bottom-0 inset-0 z-30 flex items-end justify-center bg-black/20 p-4 pb-8 backdrop-blur-xs sm:items-center lg:p-8" role="dialog" aria-modal="true" aria-labelledby="defaultModalTitle">
      <!-- Modal Dialog -->
      <div x-show="resetConfirmShow" x-transition:enter="transition ease-out duration-200 delay-100 motion-reduce:transition-opacity" x-transition:enter-start="scale-0" x-transition:enter-end="scale-100" class="flex max-w-lg flex-col gap-4 overflow-hidden rounded-lg border border-grey-200 bg-white text-neutral-600 dark:bg-gray-800 dark:border-gray-700 dark:text-neutral-300 shadow-xl">
        <!-- Dialog Header -->
        <div class="flex items-center justify-between border-b border-neutral-300 bg-neutral-50/60 p-4 dark:border-gray-700 dark:bg-gray-800/20">
          <div class="flex items-center justify-center rounded-full bg-red-500/20 text-red-500 p-1">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="size-6" aria-hidden="true">
              <path fill-rule="evenodd" d="M10 18a8 8 0 1 0 0-16 8 8 0 0 0 0 16ZM8.28 7.22a.75.75 0 0 0-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 1 0 1.06 1.06L10 11.06l1.72 1.72a.75.75 0 1 0 1.06-1.06L11.06 10l1.72-1.72a.75.75 0 0 0-1.06-1.06L10 8.94 8.28 7.22Z" clip-rule="evenodd" />
            </svg>
          </div>
          <h3 class="font-semibold tracking-wide text-neutral-900 dark:text-white">Confirm Reset TOTP</h3>
          <button @click="resetConfirmShow = false" class="cursor-pointer" aria-label="close modal">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" aria-hidden="true" stroke="currentColor" fill="none" stroke-width="1.4" class="w-5 h-5">
              <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
            </svg>
          </button>
        </div>
        <!-- Dialog Body -->
        <div class="px-4 py-4 text-center">
          <p>Are you sure you want to reset the TOTP for <strong x-text="formData.username"></strong>?</p>
          <p>The user will be required to set up a new TOTP on the next login.</p>
        </div>
        <!-- Dialog Footer -->
        <div class="flex flex-col-reverse justify-between gap-2 border-t border-neutral-300 bg-neutral-50/60 p-4 dark:border-gray-700 dark:bg-gray-800/20 sm:flex-row sm:items-center md:justify-end">
            <button @click="resetConfirmShow = false" type="button" class="cursor-pointer whitespace-nowrap rounded-lg px-4 py-2 text-center text-sm font-medium tracking-wide text-neutral-600 transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black active:opacity-100 active:outline-offset-0 dark:text-neutral-300 dark:focus-visible:outline-white hover:bg-gray-100 dark:hover:bg-gray-700">Keep Current TOTP</button>
            <button @click="resetTOTP()" type="button" class="cursor-pointer whitespace-nowrap rounded-lg bg-red-700 hover:bg-red-800 px-4 py-2 text-center text-sm font-medium tracking-wide text-neutral-100 transition focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-black active:opacity-100 active:outline-offset-0 dark:text-white dark:bg-red-600 dark:hover:bg-red-700 dark:focus-visible:outline-white">Reset TOTP</button>
        </div>
      </div>
    </div>

  </div>
</main>
{{ end }}
